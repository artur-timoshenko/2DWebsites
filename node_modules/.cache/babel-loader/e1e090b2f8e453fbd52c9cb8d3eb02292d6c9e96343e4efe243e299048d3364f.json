{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Artur\\\\Desktop\\\\portfolio-inner-site-master\\\\src\\\\components\\\\general\\\\VideoAsset.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoAsset = ({\n  src\n}) => {\n  _s();\n  const id = `video-${src}`;\n  const [, setHasLoaded] = useState(false);\n  useEffect(() => {\n    const vid = document.getElementById(id);\n    if (vid) {\n      vid.oncanplay = function () {\n        setHasLoaded(true);\n      };\n    }\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      id: `video-${src}`,\n      style: Object.assign({}, styles.video),\n      src: src,\n      autoPlay: true,\n      muted: true,\n      loop: true,\n      disablePictureInPicture: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(VideoAsset, \"z0AJ+v2gAFqm/2kna18LqP285i4=\");\n_c = VideoAsset;\nconst styles = {\n  container: {\n    width: '100%'\n  },\n  loading: {\n    width: '100%'\n  },\n  video: {\n    width: '100%'\n  },\n  loadingBox: {\n    backgroundColor: 'red'\n  }\n};\nexport default VideoAsset;\nvar _c;\n$RefreshReg$(_c, \"VideoAsset\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","VideoAsset","src","_s","id","setHasLoaded","vid","document","getElementById","oncanplay","children","style","Object","assign","styles","video","autoPlay","muted","loop","disablePictureInPicture","fileName","_jsxFileName","lineNumber","columnNumber","_c","container","width","loading","loadingBox","backgroundColor","$RefreshReg$"],"sources":["C:/Users/Artur/Desktop/portfolio-inner-site-master/src/components/general/VideoAsset.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport interface VideoAssetProps {\n    src: string;\n}\n\nconst VideoAsset: React.FC<VideoAssetProps> = ({ src }) => {\n    const id = `video-${src}`;\n    const [, setHasLoaded] = useState(false);\n\n    useEffect(() => {\n        const vid = document.getElementById(id);\n        if (vid) {\n            vid.oncanplay = function () {\n                setHasLoaded(true);\n            };\n        }\n    }, [id]);\n\n    return (\n        <div>\n            <video\n                id={`video-${src}`}\n                style={Object.assign({}, styles.video)}\n                src={src}\n                autoPlay\n                muted\n                loop\n                disablePictureInPicture\n            />\n        </div>\n    );\n};\n\nconst styles: StyleSheetCSS = {\n    container: {\n        width: '100%',\n    },\n    loading: {\n        width: '100%',\n    },\n    video: {\n        width: '100%',\n    },\n    loadingBox: {\n        backgroundColor: 'red',\n    },\n};\n\nexport default VideoAsset;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMnD,MAAMC,UAAqC,GAAGA,CAAC;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EACvD,MAAMC,EAAE,GAAG,SAASF,GAAG,EAAE;EACzB,MAAM,GAAGG,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,MAAMS,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAACJ,EAAE,CAAC;IACvC,IAAIE,GAAG,EAAE;MACLA,GAAG,CAACG,SAAS,GAAG,YAAY;QACxBJ,YAAY,CAAC,IAAI,CAAC;MACtB,CAAC;IACL;EACJ,CAAC,EAAE,CAACD,EAAE,CAAC,CAAC;EAER,oBACIJ,OAAA;IAAAU,QAAA,eACIV,OAAA;MACII,EAAE,EAAE,SAASF,GAAG,EAAG;MACnBS,KAAK,EAAEC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEC,MAAM,CAACC,KAAK,CAAE;MACvCb,GAAG,EAAEA,GAAI;MACTc,QAAQ;MACRC,KAAK;MACLC,IAAI;MACJC,uBAAuB;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACpB,EAAA,CA1BIF,UAAqC;AAAAuB,EAAA,GAArCvB,UAAqC;AA4B3C,MAAMa,MAAqB,GAAG;EAC1BW,SAAS,EAAE;IACPC,KAAK,EAAE;EACX,CAAC;EACDC,OAAO,EAAE;IACLD,KAAK,EAAE;EACX,CAAC;EACDX,KAAK,EAAE;IACHW,KAAK,EAAE;EACX,CAAC;EACDE,UAAU,EAAE;IACRC,eAAe,EAAE;EACrB;AACJ,CAAC;AAED,eAAe5B,UAAU;AAAC,IAAAuB,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}