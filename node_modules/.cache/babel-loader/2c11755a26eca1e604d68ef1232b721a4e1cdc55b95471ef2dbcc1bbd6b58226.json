{"ast":null,"code":"import { useState } from 'react';\nimport { useEventListener } from '../useEventListener';\nfunction useHover(elementRef) {\n  const [value, setValue] = useState(false);\n  const handleMouseEnter = () => setValue(true);\n  const handleMouseLeave = () => setValue(false);\n  useEventListener('mouseenter', handleMouseEnter, elementRef);\n  useEventListener('mouseleave', handleMouseLeave, elementRef);\n  return value;\n}\nexport default useHover;","map":{"version":3,"mappings":"AAAA,SAAoBA,QAAQ,QAAQ,OAAO;AAG3C,SAASC,gBAAgB,QAAQ,qBAAqB;AAEtD,SAASC,QAAQA,CACfC,UAAwB;EAExB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAU,KAAK,CAAC;EAElD,MAAMM,gBAAgB,GAAGA,MAAMD,QAAQ,CAAC,IAAI,CAAC;EAC7C,MAAME,gBAAgB,GAAGA,MAAMF,QAAQ,CAAC,KAAK,CAAC;EAE9CJ,gBAAgB,CAAC,YAAY,EAAEK,gBAAgB,EAAEH,UAAU,CAAC;EAC5DF,gBAAgB,CAAC,YAAY,EAAEM,gBAAgB,EAAEJ,UAAU,CAAC;EAE5D,OAAOC,KAAK;AACd;AAEA,eAAeF,QAAQ","names":["useState","useEventListener","useHover","elementRef","value","setValue","handleMouseEnter","handleMouseLeave"],"sources":["C:\\Users\\Artur\\Desktop\\portfolio-inner-site-master\\node_modules\\usehooks-ts\\src\\useHover\\useHover.ts"],"sourcesContent":["import { RefObject, useState } from 'react'\n\n// See: https://usehooks-ts.com/react-hook/use-event-listener\nimport { useEventListener } from '../useEventListener'\n\nfunction useHover<T extends HTMLElement = HTMLElement>(\n  elementRef: RefObject<T>,\n): boolean {\n  const [value, setValue] = useState<boolean>(false)\n\n  const handleMouseEnter = () => setValue(true)\n  const handleMouseLeave = () => setValue(false)\n\n  useEventListener('mouseenter', handleMouseEnter, elementRef)\n  useEventListener('mouseleave', handleMouseLeave, elementRef)\n\n  return value\n}\n\nexport default useHover\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}