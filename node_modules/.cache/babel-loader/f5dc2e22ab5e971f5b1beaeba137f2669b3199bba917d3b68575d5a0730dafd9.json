{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Artur\\\\Desktop\\\\portfolio-inner-site-master\\\\src\\\\components\\\\os\\\\Desktop.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Colors from '../../constants/colors';\nimport ShowcaseExplorer from '../applications/ShowcaseExplorer';\nimport ShutdownSequence from './ShutdownSequence';\n// import ThisComputer from '../applications/ThisComputer';\n\nimport Toolbar from './Toolbar';\nimport DesktopShortcut from './DesktopShortcut';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APPLICATIONS = {\n  // computer: {\n  //     key: 'computer',\n  //     name: 'This Computer',\n  //     shortcutIcon: 'computerBig',\n  //     component: ThisComputer,\n  // },\n  showcase: {\n    key: 'showcase',\n    name: 'My Showcase',\n    shortcutIcon: 'showcaseIcon',\n    component: ShowcaseExplorer\n  }\n};\nconst Desktop = props => {\n  _s();\n  const [windows, setWindows] = useState({});\n  const [shortcuts, setShortcuts] = useState([]);\n  const [shutdown, setShutdown] = useState(false);\n  const [numShutdowns, setNumShutdowns] = useState(1);\n  useEffect(() => {\n    if (shutdown === true) {\n      rebootDesktop();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [shutdown]);\n  useEffect(() => {\n    const newShortcuts = [];\n    Object.keys(APPLICATIONS).forEach(key => {\n      const app = APPLICATIONS[key];\n      newShortcuts.push({\n        shortcutName: app.name,\n        icon: app.shortcutIcon,\n        onOpen: () => {\n          addWindow(app.key, /*#__PURE__*/_jsxDEV(app.component, {\n            onInteract: () => onWindowInteract(app.key),\n            onMinimize: () => minimizeWindow(app.key),\n            onClose: () => removeWindow(app.key)\n          }, app.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this));\n        }\n      });\n    });\n    newShortcuts.forEach(shortcut => {\n      if (shortcut.shortcutName === 'My Showcase') {\n        shortcut.onOpen();\n      }\n    });\n    setShortcuts(newShortcuts);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const rebootDesktop = useCallback(() => {\n    setWindows({});\n  }, []);\n  const removeWindow = useCallback(key => {\n    // Absolute hack and a half\n    setTimeout(() => {\n      setWindows(prevWindows => {\n        const newWindows = {\n          ...prevWindows\n        };\n        delete newWindows[key];\n        return newWindows;\n      });\n    }, 100);\n  }, []);\n  const minimizeWindow = useCallback(key => {\n    setWindows(prevWindows => {\n      const newWindows = {\n        ...prevWindows\n      };\n      newWindows[key].minimized = true;\n      return newWindows;\n    });\n  }, []);\n  const getHighestZIndex = useCallback(() => {\n    let highestZIndex = 0;\n    Object.keys(windows).forEach(key => {\n      const window = windows[key];\n      if (window) {\n        if (window.zIndex > highestZIndex) highestZIndex = window.zIndex;\n      }\n    });\n    return highestZIndex;\n  }, [windows]);\n  const toggleMinimize = useCallback(key => {\n    const newWindows = {\n      ...windows\n    };\n    const highestIndex = getHighestZIndex();\n    if (newWindows[key].minimized || newWindows[key].zIndex === highestIndex) {\n      newWindows[key].minimized = !newWindows[key].minimized;\n    }\n    newWindows[key].zIndex = getHighestZIndex() + 1;\n    setWindows(newWindows);\n  }, [windows, getHighestZIndex]);\n  const onWindowInteract = useCallback(key => {\n    setWindows(prevWindows => ({\n      ...prevWindows,\n      [key]: {\n        ...prevWindows[key],\n        zIndex: 1 + getHighestZIndex()\n      }\n    }));\n  }, [setWindows, getHighestZIndex]);\n  const startShutdown = useCallback(() => {\n    setTimeout(() => {\n      setShutdown(true);\n      setNumShutdowns(numShutdowns + 1);\n    }, 600);\n  }, [numShutdowns]);\n  const addWindow = useCallback((key, element) => {\n    setWindows(prevState => ({\n      ...prevState,\n      [key]: {\n        zIndex: getHighestZIndex() + 1,\n        minimized: false,\n        component: element,\n        name: APPLICATIONS[key].name,\n        icon: APPLICATIONS[key].shortcutIcon\n      }\n    }));\n  }, [getHighestZIndex]);\n  return !shutdown ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.desktop,\n    children: [Object.keys(windows).map(key => {\n      const element = windows[key].component;\n      if (!element) return /*#__PURE__*/_jsxDEV(\"div\", {}, `win-${key}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 38\n      }, this);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: Object.assign({}, {\n          zIndex: windows[key].zIndex\n        }, windows[key].minimized && styles.minimized),\n        children: /*#__PURE__*/React.cloneElement(element, {\n          key,\n          onInteract: () => onWindowInteract(key),\n          onClose: () => removeWindow(key)\n        })\n      }, `win-${key}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.shortcuts,\n      children: shortcuts.map((shortcut, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: Object.assign({}, styles.shortcutContainer, {\n            top: i * 104\n          }),\n          children: /*#__PURE__*/_jsxDEV(DesktopShortcut, {\n            icon: shortcut.icon,\n            shortcutName: shortcut.shortcutName,\n            onOpen: shortcut.onOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this)\n        }, shortcut.shortcutName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n      windows: windows,\n      toggleMinimize: toggleMinimize,\n      shutdown: startShutdown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(ShutdownSequence, {\n    setShutdown: setShutdown,\n    numShutdowns: numShutdowns\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 9\n  }, this);\n};\n_s(Desktop, \"GjY4SYR6fHlajkFw0qbSW69IhVM=\");\n_c = Desktop;\nconst styles = {\n  desktop: {\n    minHeight: '100%',\n    flex: 1,\n    backgroundColor: Colors.turquoise\n  },\n  shutdown: {\n    minHeight: '100%',\n    flex: 1,\n    backgroundColor: '#1d2e2f'\n  },\n  shortcutContainer: {\n    position: 'absolute'\n  },\n  shortcuts: {\n    position: 'absolute',\n    top: 16,\n    left: 6\n  },\n  minimized: {\n    pointerEvents: 'none',\n    opacity: 0\n  }\n};\nexport default Desktop;\nvar _c;\n$RefreshReg$(_c, \"Desktop\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","Colors","ShowcaseExplorer","ShutdownSequence","Toolbar","DesktopShortcut","jsxDEV","_jsxDEV","APPLICATIONS","showcase","key","name","shortcutIcon","component","Desktop","props","_s","windows","setWindows","shortcuts","setShortcuts","shutdown","setShutdown","numShutdowns","setNumShutdowns","rebootDesktop","newShortcuts","Object","keys","forEach","app","push","shortcutName","icon","onOpen","addWindow","onInteract","onWindowInteract","onMinimize","minimizeWindow","onClose","removeWindow","fileName","_jsxFileName","lineNumber","columnNumber","shortcut","setTimeout","prevWindows","newWindows","minimized","getHighestZIndex","highestZIndex","window","zIndex","toggleMinimize","highestIndex","startShutdown","element","prevState","style","styles","desktop","children","map","assign","cloneElement","i","shortcutContainer","top","_c","minHeight","flex","backgroundColor","turquoise","position","left","pointerEvents","opacity","$RefreshReg$"],"sources":["C:/Users/Artur/Desktop/portfolio-inner-site-master/src/components/os/Desktop.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport Colors from '../../constants/colors';\nimport ShowcaseExplorer from '../applications/ShowcaseExplorer';\nimport ShutdownSequence from './ShutdownSequence';\n// import ThisComputer from '../applications/ThisComputer';\n\nimport Toolbar from './Toolbar';\nimport DesktopShortcut, { DesktopShortcutProps } from './DesktopShortcut';\nimport { IconName } from '../../assets/icons';\n\nexport interface DesktopProps {}\n\ntype ExtendedWindowAppProps<T> = T & WindowAppProps;\n\nconst APPLICATIONS: {\n    [key in string]: {\n        key: string;\n        name: string;\n        shortcutIcon: IconName;\n        component: React.FC<ExtendedWindowAppProps<any>>;\n    };\n} = {\n    // computer: {\n    //     key: 'computer',\n    //     name: 'This Computer',\n    //     shortcutIcon: 'computerBig',\n    //     component: ThisComputer,\n    // },\n    showcase: {\n        key: 'showcase',\n        name: 'My Showcase',\n        shortcutIcon: 'showcaseIcon',\n        component: ShowcaseExplorer,\n    },\n};\n\nconst Desktop: React.FC<DesktopProps> = (props) => {\n    const [windows, setWindows] = useState<DesktopWindows>({});\n\n    const [shortcuts, setShortcuts] = useState<DesktopShortcutProps[]>([]);\n\n    const [shutdown, setShutdown] = useState(false);\n    const [numShutdowns, setNumShutdowns] = useState(1);\n\n    useEffect(() => {\n        if (shutdown === true) {\n            rebootDesktop();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [shutdown]);\n\n    useEffect(() => {\n        const newShortcuts: DesktopShortcutProps[] = [];\n        Object.keys(APPLICATIONS).forEach((key) => {\n            const app = APPLICATIONS[key];\n            newShortcuts.push({\n                shortcutName: app.name,\n                icon: app.shortcutIcon,\n                onOpen: () => {\n                    addWindow(\n                        app.key,\n                        <app.component\n                            onInteract={() => onWindowInteract(app.key)}\n                            onMinimize={() => minimizeWindow(app.key)}\n                            onClose={() => removeWindow(app.key)}\n                            key={app.key}\n                        />\n                    );\n                },\n            });\n        });\n\n        newShortcuts.forEach((shortcut) => {\n            if (shortcut.shortcutName === 'My Showcase') {\n                shortcut.onOpen();\n            }\n        });\n\n        setShortcuts(newShortcuts);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const rebootDesktop = useCallback(() => {\n        setWindows({});\n    }, []);\n\n    const removeWindow = useCallback((key: string) => {\n        // Absolute hack and a half\n        setTimeout(() => {\n            setWindows((prevWindows) => {\n                const newWindows = { ...prevWindows };\n                delete newWindows[key];\n                return newWindows;\n            });\n        }, 100);\n    }, []);\n\n    const minimizeWindow = useCallback((key: string) => {\n        setWindows((prevWindows) => {\n            const newWindows = { ...prevWindows };\n            newWindows[key].minimized = true;\n            return newWindows;\n        });\n    }, []);\n\n    const getHighestZIndex = useCallback((): number => {\n        let highestZIndex = 0;\n        Object.keys(windows).forEach((key) => {\n            const window = windows[key];\n            if (window) {\n                if (window.zIndex > highestZIndex)\n                    highestZIndex = window.zIndex;\n            }\n        });\n        return highestZIndex;\n    }, [windows]);\n\n    const toggleMinimize = useCallback(\n        (key: string) => {\n            const newWindows = { ...windows };\n            const highestIndex = getHighestZIndex();\n            if (\n                newWindows[key].minimized ||\n                newWindows[key].zIndex === highestIndex\n            ) {\n                newWindows[key].minimized = !newWindows[key].minimized;\n            }\n            newWindows[key].zIndex = getHighestZIndex() + 1;\n            setWindows(newWindows);\n        },\n        [windows, getHighestZIndex]\n    );\n\n    const onWindowInteract = useCallback(\n        (key: string) => {\n            setWindows((prevWindows) => ({\n                ...prevWindows,\n                [key]: {\n                    ...prevWindows[key],\n                    zIndex: 1 + getHighestZIndex(),\n                },\n            }));\n        },\n        [setWindows, getHighestZIndex]\n    );\n\n    const startShutdown = useCallback(() => {\n        setTimeout(() => {\n            setShutdown(true);\n            setNumShutdowns(numShutdowns + 1);\n        }, 600);\n    }, [numShutdowns]);\n\n    const addWindow = useCallback(\n        (key: string, element: JSX.Element) => {\n            setWindows((prevState) => ({\n                ...prevState,\n                [key]: {\n                    zIndex: getHighestZIndex() + 1,\n                    minimized: false,\n                    component: element,\n                    name: APPLICATIONS[key].name,\n                    icon: APPLICATIONS[key].shortcutIcon,\n                },\n            }));\n        },\n        [getHighestZIndex]\n    );\n\n    return !shutdown ? (\n        <div style={styles.desktop}>\n            {/* For each window in windows, loop over and render  */}\n            {Object.keys(windows).map((key) => {\n                const element = windows[key].component;\n                if (!element) return <div key={`win-${key}`}></div>;\n                return (\n                    <div\n                        key={`win-${key}`}\n                        style={Object.assign(\n                            {},\n                            { zIndex: windows[key].zIndex },\n                            windows[key].minimized && styles.minimized\n                        )}\n                    >\n                        {React.cloneElement(element, {\n                            key,\n                            onInteract: () => onWindowInteract(key),\n                            onClose: () => removeWindow(key),\n                        })}\n                    </div>\n                );\n            })}\n            <div style={styles.shortcuts}>\n                {shortcuts.map((shortcut, i) => {\n                    return (\n                        <div\n                            style={Object.assign({}, styles.shortcutContainer, {\n                                top: i * 104,\n                            })}\n                            key={shortcut.shortcutName}\n                        >\n                            <DesktopShortcut\n                                icon={shortcut.icon}\n                                shortcutName={shortcut.shortcutName}\n                                onOpen={shortcut.onOpen}\n                            />\n                        </div>\n                    );\n                })}\n            </div>\n            <Toolbar\n                windows={windows}\n                toggleMinimize={toggleMinimize}\n                shutdown={startShutdown}\n            />\n        </div>\n    ) : (\n        <ShutdownSequence\n            setShutdown={setShutdown}\n            numShutdowns={numShutdowns}\n        />\n    );\n};\n\nconst styles: StyleSheetCSS = {\n    desktop: {\n        minHeight: '100%',\n        flex: 1,\n        backgroundColor: Colors.turquoise,\n    },\n    shutdown: {\n        minHeight: '100%',\n        flex: 1,\n        backgroundColor: '#1d2e2f',\n    },\n    shortcutContainer: {\n        position: 'absolute',\n    },\n    shortcuts: {\n        position: 'absolute',\n        top: 16,\n        left: 6,\n    },\n    minimized: {\n        pointerEvents: 'none',\n        opacity: 0,\n    },\n};\n\nexport default Desktop;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}