{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Artur\\\\Desktop\\\\portfolio-inner-site-master\\\\src\\\\components\\\\os\\\\Desktop.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Colors from '../../constants/colors';\nimport ShowcaseExplorer from '../applications/ShowcaseExplorer';\nimport ShutdownSequence from './ShutdownSequence';\nimport Toolbar from './Toolbar';\nimport DesktopShortcut from './DesktopShortcut';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APPLICATIONS = {\n  showcase: {\n    key: 'showcase',\n    name: 'My Showcase',\n    shortcutIcon: 'showcaseIcon',\n    component: ShowcaseExplorer\n  }\n};\nconst Desktop = props => {\n  _s();\n  const [windows, setWindows] = useState({});\n  const [shortcuts, setShortcuts] = useState([]);\n  const [shutdown, setShutdown] = useState(false);\n  const [numShutdowns, setNumShutdowns] = useState(1);\n  const [selection, setSelection] = useState({\n    isSelecting: false,\n    startX: 0,\n    startY: 0,\n    width: 0,\n    height: 0\n  });\n  useEffect(() => {\n    if (shutdown === true) {\n      rebootDesktop();\n    }\n  }, [shutdown]);\n  useEffect(() => {\n    const newShortcuts = [];\n    Object.keys(APPLICATIONS).forEach(key => {\n      const app = APPLICATIONS[key];\n      newShortcuts.push({\n        shortcutName: app.name,\n        icon: app.shortcutIcon,\n        onOpen: () => {\n          addWindow(app.key, /*#__PURE__*/_jsxDEV(app.component, {\n            onInteract: () => onWindowInteract(app.key),\n            onMinimize: () => minimizeWindow(app.key),\n            onClose: () => removeWindow(app.key)\n          }, app.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this));\n        }\n      });\n    });\n    newShortcuts.forEach(shortcut => {\n      if (shortcut.shortcutName === 'My Showcase') {\n        shortcut.onOpen();\n      }\n    });\n    setShortcuts(newShortcuts);\n  }, []);\n  const rebootDesktop = useCallback(() => {\n    setWindows({});\n  }, []);\n  const removeWindow = useCallback(key => {\n    setTimeout(() => {\n      setWindows(prevWindows => {\n        const newWindows = {\n          ...prevWindows\n        };\n        delete newWindows[key];\n        return newWindows;\n      });\n    }, 100);\n  }, []);\n  const minimizeWindow = useCallback(key => {\n    setWindows(prevWindows => {\n      const newWindows = {\n        ...prevWindows\n      };\n      newWindows[key].minimized = true;\n      return newWindows;\n    });\n  }, []);\n  const getHighestZIndex = useCallback(() => {\n    let highestZIndex = 0;\n    Object.keys(windows).forEach(key => {\n      const window = windows[key];\n      if (window && window.zIndex > highestZIndex) highestZIndex = window.zIndex;\n    });\n    return highestZIndex;\n  }, [windows]);\n  const toggleMinimize = useCallback(key => {\n    const newWindows = {\n      ...windows\n    };\n    const highestIndex = getHighestZIndex();\n    if (newWindows[key].minimized || newWindows[key].zIndex === highestIndex) {\n      newWindows[key].minimized = !newWindows[key].minimized;\n    }\n    newWindows[key].zIndex = highestZIndex + 1;\n    setWindows(newWindows);\n  }, [windows, getHighestZIndex]);\n  const onWindowInteract = useCallback(key => {\n    setWindows(prevWindows => ({\n      ...prevWindows,\n      [key]: {\n        ...prevWindows[key],\n        zIndex: 1 + getHighestZIndex()\n      }\n    }));\n  }, [setWindows, getHighestZIndex]);\n  const startShutdown = useCallback(() => {\n    setTimeout(() => {\n      setShutdown(true);\n      setNumShutdowns(numShutdowns + 1);\n    }, 600);\n  }, [numShutdowns]);\n  const addWindow = useCallback((key, element) => {\n    setWindows(prevState => ({\n      ...prevState,\n      [key]: {\n        zIndex: getHighestZIndex() + 1,\n        minimized: false,\n        component: element,\n        name: APPLICATIONS[key].name,\n        icon: APPLICATIONS[key].shortcutIcon\n      }\n    }));\n  }, [getHighestZIndex]);\n  const handleMouseDown = e => {\n    setSelection({\n      isSelecting: true,\n      startX: e.clientX,\n      startY: e.clientY,\n      width: 0,\n      height: 0\n    });\n  };\n  const handleMouseMove = e => {\n    if (!selection.isSelecting) return;\n    const width = e.clientX - selection.startX;\n    const height = e.clientY - selection.startY;\n    setSelection(prev => ({\n      ...prev,\n      width,\n      height\n    }));\n  };\n  const handleMouseUp = () => {\n    setSelection(prev => ({\n      ...prev,\n      isSelecting: false\n    }));\n    // Вы можете добавить логику для выбора элементов, находящихся в выделенной области\n  };\n  return !shutdown ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.desktop,\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp,\n    children: [Object.keys(windows).map(key => {\n      const element = windows[key].component;\n      if (!element) return /*#__PURE__*/_jsxDEV(\"div\", {}, `win-${key}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 38\n      }, this);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          ...{\n            zIndex: windows[key].zIndex\n          },\n          ...(windows[key].minimized && styles.minimized)\n        },\n        children: /*#__PURE__*/React.cloneElement(element, {\n          key,\n          onInteract: () => onWindowInteract(key),\n          onClose: () => removeWindow(key)\n        })\n      }, `win-${key}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.shortcuts,\n      children: shortcuts.map((shortcut, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          ...styles.shortcutContainer,\n          top: i * 104\n        },\n        children: /*#__PURE__*/_jsxDEV(DesktopShortcut, {\n          icon: shortcut.icon,\n          shortcutName: shortcut.shortcutName,\n          onOpen: shortcut.onOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this)\n      }, shortcut.shortcutName, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this), selection.isSelecting && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        left: selection.startX,\n        top: selection.startY,\n        width: selection.width,\n        height: selection.height,\n        backgroundColor: 'rgba(0, 0, 255, 0.3)',\n        border: '2px solid blue',\n        pointerEvents: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n      windows: windows,\n      toggleMinimize: toggleMinimize,\n      shutdown: startShutdown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(ShutdownSequence, {\n    setShutdown: setShutdown,\n    numShutdowns: numShutdowns\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 9\n  }, this);\n};\n_s(Desktop, \"k+0T7ZggFNkZ5FZIHEOv7sXv0yo=\");\n_c = Desktop;\nconst styles = {\n  desktop: {\n    minHeight: '100%',\n    flex: 1,\n    backgroundColor: Colors.turquoise,\n    position: 'relative'\n  },\n  shutdown: {\n    minHeight: '100%',\n    flex: 1,\n    backgroundColor: '#1d2e2f'\n  },\n  shortcutContainer: {\n    position: 'absolute'\n  },\n  shortcuts: {\n    position: 'absolute',\n    top: 16,\n    left: 6\n  },\n  minimized: {\n    pointerEvents: 'none',\n    opacity: 0\n  }\n};\nexport default Desktop;\nvar _c;\n$RefreshReg$(_c, \"Desktop\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","Colors","ShowcaseExplorer","ShutdownSequence","Toolbar","DesktopShortcut","jsxDEV","_jsxDEV","APPLICATIONS","showcase","key","name","shortcutIcon","component","Desktop","props","_s","windows","setWindows","shortcuts","setShortcuts","shutdown","setShutdown","numShutdowns","setNumShutdowns","selection","setSelection","isSelecting","startX","startY","width","height","rebootDesktop","newShortcuts","Object","keys","forEach","app","push","shortcutName","icon","onOpen","addWindow","onInteract","onWindowInteract","onMinimize","minimizeWindow","onClose","removeWindow","fileName","_jsxFileName","lineNumber","columnNumber","shortcut","setTimeout","prevWindows","newWindows","minimized","getHighestZIndex","highestZIndex","window","zIndex","toggleMinimize","highestIndex","startShutdown","element","prevState","handleMouseDown","e","clientX","clientY","handleMouseMove","prev","handleMouseUp","style","styles","desktop","onMouseDown","onMouseMove","onMouseUp","children","map","cloneElement","i","shortcutContainer","top","position","left","backgroundColor","border","pointerEvents","_c","minHeight","flex","turquoise","opacity","$RefreshReg$"],"sources":["C:/Users/Artur/Desktop/portfolio-inner-site-master/src/components/os/Desktop.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport Colors from '../../constants/colors';\nimport ShowcaseExplorer from '../applications/ShowcaseExplorer';\nimport ShutdownSequence from './ShutdownSequence';\nimport Toolbar from './Toolbar';\nimport DesktopShortcut, { DesktopShortcutProps } from './DesktopShortcut';\nimport { IconName } from '../../assets/icons';\n\nexport interface DesktopProps {}\n\ntype ExtendedWindowAppProps<T> = T & WindowAppProps;\n\nconst APPLICATIONS: {\n    [key in string]: {\n        key: string;\n        name: string;\n        shortcutIcon: IconName;\n        component: React.FC<ExtendedWindowAppProps<any>>;\n    };\n} = {\n    showcase: {\n        key: 'showcase',\n        name: 'My Showcase',\n        shortcutIcon: 'showcaseIcon',\n        component: ShowcaseExplorer,\n    },\n};\n\nconst Desktop: React.FC<DesktopProps> = (props) => {\n    const [windows, setWindows] = useState<DesktopWindows>({});\n    const [shortcuts, setShortcuts] = useState<DesktopShortcutProps[]>([]);\n    const [shutdown, setShutdown] = useState(false);\n    const [numShutdowns, setNumShutdowns] = useState(1);\n\n    const [selection, setSelection] = useState<{\n        isSelecting: boolean;\n        startX: number;\n        startY: number;\n        width: number;\n        height: number;\n    }>({ isSelecting: false, startX: 0, startY: 0, width: 0, height: 0 });\n\n    useEffect(() => {\n        if (shutdown === true) {\n            rebootDesktop();\n        }\n    }, [shutdown]);\n\n    useEffect(() => {\n        const newShortcuts: DesktopShortcutProps[] = [];\n        Object.keys(APPLICATIONS).forEach((key) => {\n            const app = APPLICATIONS[key];\n            newShortcuts.push({\n                shortcutName: app.name,\n                icon: app.shortcutIcon,\n                onOpen: () => {\n                    addWindow(\n                        app.key,\n                        <app.component\n                            onInteract={() => onWindowInteract(app.key)}\n                            onMinimize={() => minimizeWindow(app.key)}\n                            onClose={() => removeWindow(app.key)}\n                            key={app.key}\n                        />\n                    );\n                },\n            });\n        });\n        newShortcuts.forEach((shortcut) => {\n            if (shortcut.shortcutName === 'My Showcase') {\n                shortcut.onOpen();\n            }\n        });\n        setShortcuts(newShortcuts);\n    }, []);\n\n    const rebootDesktop = useCallback(() => {\n        setWindows({});\n    }, []);\n\n    const removeWindow = useCallback((key: string) => {\n        setTimeout(() => {\n            setWindows((prevWindows) => {\n                const newWindows = { ...prevWindows };\n                delete newWindows[key];\n                return newWindows;\n            });\n        }, 100);\n    }, []);\n\n    const minimizeWindow = useCallback((key: string) => {\n        setWindows((prevWindows) => {\n            const newWindows = { ...prevWindows };\n            newWindows[key].minimized = true;\n            return newWindows;\n        });\n    }, []);\n\n    const getHighestZIndex = useCallback((): number => {\n        let highestZIndex = 0;\n        Object.keys(windows).forEach((key) => {\n            const window = windows[key];\n            if (window && window.zIndex > highestZIndex) highestZIndex = window.zIndex;\n        });\n        return highestZIndex;\n    }, [windows]);\n\n    const toggleMinimize = useCallback(\n        (key: string) => {\n            const newWindows = { ...windows };\n            const highestIndex = getHighestZIndex();\n            if (newWindows[key].minimized || newWindows[key].zIndex === highestIndex) {\n                newWindows[key].minimized = !newWindows[key].minimized;\n            }\n            newWindows[key].zIndex = highestZIndex + 1;\n            setWindows(newWindows);\n        },\n        [windows, getHighestZIndex]\n    );\n\n    const onWindowInteract = useCallback(\n        (key: string) => {\n            setWindows((prevWindows) => ({\n                ...prevWindows,\n                [key]: {\n                    ...prevWindows[key],\n                    zIndex: 1 + getHighestZIndex(),\n                },\n            }));\n        },\n        [setWindows, getHighestZIndex]\n    );\n\n    const startShutdown = useCallback(() => {\n        setTimeout(() => {\n            setShutdown(true);\n            setNumShutdowns(numShutdowns + 1);\n        }, 600);\n    }, [numShutdowns]);\n\n    const addWindow = useCallback(\n        (key: string, element: JSX.Element) => {\n            setWindows((prevState) => ({\n                ...prevState,\n                [key]: {\n                    zIndex: getHighestZIndex() + 1,\n                    minimized: false,\n                    component: element,\n                    name: APPLICATIONS[key].name,\n                    icon: APPLICATIONS[key].shortcutIcon,\n                },\n            }));\n        },\n        [getHighestZIndex]\n    );\n\n    const handleMouseDown = (e: React.MouseEvent) => {\n        setSelection({\n            isSelecting: true,\n            startX: e.clientX,\n            startY: e.clientY,\n            width: 0,\n            height: 0,\n        });\n    };\n\n    const handleMouseMove = (e: React.MouseEvent) => {\n        if (!selection.isSelecting) return;\n        const width = e.clientX - selection.startX;\n        const height = e.clientY - selection.startY;\n        setSelection((prev) => ({\n            ...prev,\n            width,\n            height,\n        }));\n    };\n\n    const handleMouseUp = () => {\n        setSelection((prev) => ({\n            ...prev,\n            isSelecting: false,\n        }));\n        // Вы можете добавить логику для выбора элементов, находящихся в выделенной области\n    };\n\n    return !shutdown ? (\n        <div\n            style={styles.desktop}\n            onMouseDown={handleMouseDown}\n            onMouseMove={handleMouseMove}\n            onMouseUp={handleMouseUp}\n        >\n            {/* Render windows */}\n            {Object.keys(windows).map((key) => {\n                const element = windows[key].component;\n                if (!element) return <div key={`win-${key}`}></div>;\n                return (\n                    <div\n                        key={`win-${key}`}\n                        style={{\n                            ...{ zIndex: windows[key].zIndex },\n                            ...(windows[key].minimized && styles.minimized),\n                        }}\n                    >\n                        {React.cloneElement(element, {\n                            key,\n                            onInteract: () => onWindowInteract(key),\n                            onClose: () => removeWindow(key),\n                        })}\n                    </div>\n                );\n            })}\n            {/* Render shortcuts */}\n            <div style={styles.shortcuts}>\n                {shortcuts.map((shortcut, i) => (\n                    <div\n                        style={{ ...styles.shortcutContainer, top: i * 104 }}\n                        key={shortcut.shortcutName}\n                    >\n                        <DesktopShortcut\n                            icon={shortcut.icon}\n                            shortcutName={shortcut.shortcutName}\n                            onOpen={shortcut.onOpen}\n                        />\n                    </div>\n                ))}\n            </div>\n            {/* Render selection box */}\n            {selection.isSelecting && (\n                <div\n                    style={{\n                        position: 'absolute',\n                        left: selection.startX,\n                        top: selection.startY,\n                        width: selection.width,\n                        height: selection.height,\n                        backgroundColor: 'rgba(0, 0, 255, 0.3)',\n                        border: '2px solid blue',\n                        pointerEvents: 'none',\n                    }}\n                />\n            )}\n            <Toolbar\n                windows={windows}\n                toggleMinimize={toggleMinimize}\n                shutdown={startShutdown}\n            />\n        </div>\n    ) : (\n        <ShutdownSequence setShutdown={setShutdown} numShutdowns={numShutdowns} />\n    );\n};\n\nconst styles: StyleSheetCSS = {\n    desktop: {\n        minHeight: '100%',\n        flex: 1,\n        backgroundColor: Colors.turquoise,\n        position: 'relative',\n    },\n    shutdown: {\n        minHeight: '100%',\n        flex: 1,\n        backgroundColor: '#1d2e2f',\n    },\n    shortcutContainer: {\n        position: 'absolute',\n    },\n    shortcuts: {\n        position: 'absolute',\n        top: 16,\n        left: 6,\n    },\n    minimized: {\n        pointerEvents: 'none',\n        opacity: 0,\n    },\n};\n\nexport default Desktop;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}