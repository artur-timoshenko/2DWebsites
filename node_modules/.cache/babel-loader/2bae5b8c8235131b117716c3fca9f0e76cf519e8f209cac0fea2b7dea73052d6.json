{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect';\nfunction useLockedBody(initialLocked = false) {\n  const [locked, setLocked] = useState(initialLocked);\n  useIsomorphicLayoutEffect(() => {\n    if (!locked) {\n      return;\n    }\n    const originalOverflow = document.body.style.overflow;\n    const originalPaddingRight = document.body.style.paddingRight;\n    document.body.style.overflow = 'hidden';\n    const root = document.getElementById('___gatsby');\n    const scrollBarWidth = root ? root.offsetWidth - root.scrollWidth : 0;\n    if (scrollBarWidth) {\n      document.body.style.paddingRight = `${scrollBarWidth}px`;\n    }\n    return () => {\n      document.body.style.overflow = originalOverflow;\n      if (scrollBarWidth) {\n        document.body.style.paddingRight = originalPaddingRight;\n      }\n    };\n  }, [locked]);\n  useEffect(() => {\n    if (locked !== initialLocked) {\n      setLocked(initialLocked);\n    }\n  }, [initialLocked]);\n  return [locked, setLocked];\n}\nexport default useLockedBody;","map":{"version":3,"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAG3C,SAASC,yBAAyB,QAAQ,8BAA8B;AAIxE,SAASC,aAAaA,CAACC,aAAa,GAAG,KAAK;EAC1C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAACG,aAAa,CAAC;EAGnDF,yBAAyB,CAAC,MAAK;IAC7B,IAAI,CAACG,MAAM,EAAE;MACX;;IAIF,MAAME,gBAAgB,GAAGC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ;IACrD,MAAMC,oBAAoB,GAAGJ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACG,YAAY;IAG7DL,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAG,QAAQ;IAGvC,MAAMG,IAAI,GAAGN,QAAQ,CAACO,cAAc,CAAC,WAAW,CAAC;IACjD,MAAMC,cAAc,GAAGF,IAAI,GAAGA,IAAI,CAACG,WAAW,GAAGH,IAAI,CAACI,WAAW,GAAG,CAAC;IAGrE,IAAIF,cAAc,EAAE;MAClBR,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACG,YAAY,GAAG,GAAGG,cAAc,IAAI;;IAG1D,OAAO,MAAK;MACVR,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,QAAQ,GAAGJ,gBAAgB;MAE/C,IAAIS,cAAc,EAAE;QAClBR,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACG,YAAY,GAAGD,oBAAoB;;IAE3D,CAAC;EACH,CAAC,EAAE,CAACP,MAAM,CAAC,CAAC;EAGZL,SAAS,CAAC,MAAK;IACb,IAAIK,MAAM,KAAKD,aAAa,EAAE;MAC5BE,SAAS,CAACF,aAAa,CAAC;;EAG5B,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,OAAO,CAACC,MAAM,EAAEC,SAAS,CAAC;AAC5B;AAEA,eAAeH,aAAa","names":["useEffect","useState","useIsomorphicLayoutEffect","useLockedBody","initialLocked","locked","setLocked","originalOverflow","document","body","style","overflow","originalPaddingRight","paddingRight","root","getElementById","scrollBarWidth","offsetWidth","scrollWidth"],"sources":["C:\\Users\\Artur\\Desktop\\portfolio-inner-site-master\\node_modules\\usehooks-ts\\src\\useLockedBody\\useLockedBody.ts"],"sourcesContent":["import { useEffect, useState } from 'react'\n\n// See: https://usehooks-ts.com/react-hook/use-isomorphic-layout-effect\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect'\n\ntype ReturnType = [boolean, (locked: boolean) => void]\n\nfunction useLockedBody(initialLocked = false): ReturnType {\n  const [locked, setLocked] = useState(initialLocked)\n\n  // Do the side effect before render\n  useIsomorphicLayoutEffect(() => {\n    if (!locked) {\n      return\n    }\n\n    // Save initial body style\n    const originalOverflow = document.body.style.overflow\n    const originalPaddingRight = document.body.style.paddingRight\n\n    // Lock body scroll\n    document.body.style.overflow = 'hidden'\n\n    // Get the scrollBar width\n    const root = document.getElementById('___gatsby') // or root\n    const scrollBarWidth = root ? root.offsetWidth - root.scrollWidth : 0\n\n    // Avoid width reflow\n    if (scrollBarWidth) {\n      document.body.style.paddingRight = `${scrollBarWidth}px`\n    }\n\n    return () => {\n      document.body.style.overflow = originalOverflow\n\n      if (scrollBarWidth) {\n        document.body.style.paddingRight = originalPaddingRight\n      }\n    }\n  }, [locked])\n\n  // Update state if initialValue changes\n  useEffect(() => {\n    if (locked !== initialLocked) {\n      setLocked(initialLocked)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [initialLocked])\n\n  return [locked, setLocked]\n}\n\nexport default useLockedBody\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}