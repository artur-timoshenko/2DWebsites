{"ast":null,"code":"import { useState } from 'react';\nimport { useEventListener } from '../useEventListener';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect';\nfunction useScreen() {\n  const getScreen = () => {\n    if (typeof window !== 'undefined' && window.screen) {\n      return window.screen;\n    }\n    return undefined;\n  };\n  const [screen, setScreen] = useState(getScreen());\n  function handleSize() {\n    setScreen(getScreen());\n  }\n  useEventListener('resize', handleSize);\n  useIsomorphicLayoutEffect(() => {\n    handleSize();\n  }, []);\n  return screen;\n}\nexport default useScreen;","map":{"version":3,"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAGhC,SAASC,gBAAgB,QAAQ,qBAAqB;AAEtD,SAASC,yBAAyB,QAAQ,8BAA8B;AAExE,SAASC,SAASA;EAChB,MAAMC,SAAS,GAAGA,MAAK;IACrB,IAAI,OAAOC,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACC,MAAM,EAAE;MAClD,OAAOD,MAAM,CAACC,MAAM;;IAEtB,OAAOC,SAAS;EAClB,CAAC;EAED,MAAM,CAACD,MAAM,EAAEE,SAAS,CAAC,GAAGR,QAAQ,CAAqBI,SAAS,EAAE,CAAC;EAErE,SAASK,UAAUA;IACjBD,SAAS,CAACJ,SAAS,EAAE,CAAC;EACxB;EAEAH,gBAAgB,CAAC,QAAQ,EAAEQ,UAAU,CAAC;EAGtCP,yBAAyB,CAAC,MAAK;IAC7BO,UAAU,EAAE;EAEd,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOH,MAAM;AACf;AAEA,eAAeH,SAAS","names":["useState","useEventListener","useIsomorphicLayoutEffect","useScreen","getScreen","window","screen","undefined","setScreen","handleSize"],"sources":["C:\\Users\\Artur\\Desktop\\portfolio-inner-site-master\\node_modules\\usehooks-ts\\src\\useScreen\\useScreen.ts"],"sourcesContent":["import { useState } from 'react'\n\n// See: https://usehooks-ts.com/react-hook/use-event-listener\nimport { useEventListener } from '../useEventListener'\n// See: https://usehooks-ts.com/react-hook/use-isomorphic-layout-effect\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect'\n\nfunction useScreen() {\n  const getScreen = () => {\n    if (typeof window !== 'undefined' && window.screen) {\n      return window.screen\n    }\n    return undefined\n  }\n\n  const [screen, setScreen] = useState<Screen | undefined>(getScreen())\n\n  function handleSize() {\n    setScreen(getScreen())\n  }\n\n  useEventListener('resize', handleSize)\n\n  // Set size at the first client-side load\n  useIsomorphicLayoutEffect(() => {\n    handleSize()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return screen\n}\n\nexport default useScreen\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}