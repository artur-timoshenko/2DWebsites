{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Artur\\\\Desktop\\\\portfolio-inner-site-master\\\\src\\\\components\\\\os\\\\DesktopShortcut.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport colors from '../../constants/colors';\nimport { Icon } from '../general';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DesktopShortcut = ({\n  icon,\n  shortcutName,\n  invertText,\n  onOpen\n}) => {\n  _s();\n  const [isSelected, setIsSelected] = useState(false);\n  const [shortcutId, setShortcutId] = useState('');\n  const [lastSelected, setLastSelected] = useState(false);\n  const containerRef = useRef();\n  const [scaledStyle, setScaledStyle] = useState({});\n  const requiredIcon = require(`../../assets/icons/${icon}.png`);\n  const [doubleClickTimerActive, setDoubleClickTimerActive] = useState(false);\n  const getShortcutId = useCallback(() => {\n    const shortcutId = shortcutName.replace(/\\s/g, '');\n    return `desktop-shortcut-${shortcutId}`;\n  }, [shortcutName]);\n  useEffect(() => {\n    setShortcutId(getShortcutId());\n  }, [shortcutName, getShortcutId]);\n  useEffect(() => {\n    if (containerRef.current && Object.keys(scaledStyle).length === 0) {\n      //@ts-ignore\n      const boundingBox = containerRef.current.getBoundingClientRect();\n      setScaledStyle({\n        transformOrigin: 'center',\n        transform: 'scale(1.5)',\n        left: boundingBox.width / 4,\n        top: boundingBox.height / 4\n        // transform: 'scale(1.5)',\n        // left: boundingBox.width / 4,\n        // top: boundingBox.height / 4,\n      });\n    }\n  }, [scaledStyle]);\n  const handleClickOutside = useCallback(event => {\n    // @ts-ignore\n    const targetId = event.target.id;\n    if (targetId !== shortcutId) {\n      setIsSelected(false);\n    }\n    if (!isSelected && lastSelected) {\n      setLastSelected(false);\n    }\n  }, [isSelected, setIsSelected, setLastSelected, lastSelected, shortcutId]);\n  const handleClickShortcut = useCallback(() => {\n    if (doubleClickTimerActive) {\n      onOpen && onOpen();\n      setIsSelected(false);\n      setDoubleClickTimerActive(false);\n      return;\n    }\n    setIsSelected(true);\n    setLastSelected(true);\n    setDoubleClickTimerActive(true);\n    // set double click timer\n    setTimeout(() => {\n      setDoubleClickTimerActive(false);\n    }, 300);\n  }, [doubleClickTimerActive, setIsSelected, onOpen]);\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isSelected, handleClickOutside]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: `${shortcutId}`,\n    style: Object.assign({}, styles.appShortcut, scaledStyle),\n    onMouseDown: handleClickShortcut,\n    ref: containerRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: `${shortcutId}`,\n      style: styles.iconContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: `${shortcutId}`,\n        className: \"desktop-shortcut-icon\",\n        style: Object.assign({}, styles.iconOverlay, isSelected && styles.checkerboard, isSelected && {\n          WebkitMask: `url(${requiredIcon})`\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Icon, {\n        icon: icon,\n        style: styles.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isSelected ? 'selected-shortcut-border' : lastSelected ? 'shortcut-border' : '',\n      id: `${shortcutId}`,\n      style: isSelected ? {\n        backgroundColor: colors.blue\n      } : {},\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        id: `${shortcutId}`,\n        style: Object.assign({}, styles.shortcutText, invertText && !isSelected && {\n          color: 'black'\n        }),\n        children: shortcutName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(DesktopShortcut, \"A5WX1mdj/QqF6iedAkzKnqaDA7k=\");\n_c = DesktopShortcut;\nconst styles = {\n  appShortcut: {\n    position: 'absolute',\n    width: 56,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n    textAlign: 'center'\n  },\n  shortcutText: {\n    cursor: 'pointer',\n    textOverflow: 'wrap',\n    fontFamily: 'MSSerif',\n    color: 'white',\n    fontSize: 8,\n    paddingRight: 2,\n    paddingLeft: 2\n  },\n  iconContainer: {\n    cursor: 'pointer',\n    paddingBottom: 3\n  },\n  iconOverlay: {\n    position: 'absolute',\n    top: 0,\n    width: 32,\n    height: 32\n  },\n  checkerboard: {\n    backgroundImage: `linear-gradient(45deg, ${colors.blue} 25%, transparent 25%),\n        linear-gradient(-45deg, ${colors.blue} 25%, transparent 25%),\n        linear-gradient(45deg, transparent 75%, ${colors.blue} 75%),\n        linear-gradient(-45deg, transparent 75%, ${colors.blue} 75%)`,\n    backgroundSize: `2px 2px`,\n    backgroundPosition: `0 0, 0 1px, 1px -1px, -1px 0px`,\n    pointerEvents: 'none'\n  }\n};\nexport default DesktopShortcut;\nvar _c;\n$RefreshReg$(_c, \"DesktopShortcut\");","map":{"version":3,"names":["React","useCallback","useEffect","useRef","useState","colors","Icon","jsxDEV","_jsxDEV","DesktopShortcut","icon","shortcutName","invertText","onOpen","_s","isSelected","setIsSelected","shortcutId","setShortcutId","lastSelected","setLastSelected","containerRef","scaledStyle","setScaledStyle","requiredIcon","require","doubleClickTimerActive","setDoubleClickTimerActive","getShortcutId","replace","current","Object","keys","length","boundingBox","getBoundingClientRect","transformOrigin","transform","left","width","top","height","handleClickOutside","event","targetId","target","id","handleClickShortcut","setTimeout","document","addEventListener","removeEventListener","style","assign","styles","appShortcut","onMouseDown","ref","children","iconContainer","className","iconOverlay","checkerboard","WebkitMask","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","blue","shortcutText","color","_c","position","justifyContent","alignItems","flexDirection","textAlign","cursor","textOverflow","fontFamily","fontSize","paddingRight","paddingLeft","paddingBottom","backgroundImage","backgroundSize","backgroundPosition","pointerEvents","$RefreshReg$"],"sources":["C:/Users/Artur/Desktop/portfolio-inner-site-master/src/components/os/DesktopShortcut.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { IconName } from '../../assets/icons';\nimport colors from '../../constants/colors';\nimport { Icon } from '../general';\n\nexport interface DesktopShortcutProps {\n    icon: IconName;\n    shortcutName: string;\n    invertText?: boolean;\n    onOpen: () => void;\n}\n\nconst DesktopShortcut: React.FC<DesktopShortcutProps> = ({\n    icon,\n    shortcutName,\n    invertText,\n    onOpen,\n}) => {\n    const [isSelected, setIsSelected] = useState(false);\n    const [shortcutId, setShortcutId] = useState('');\n    const [lastSelected, setLastSelected] = useState(false);\n    const containerRef = useRef<any>();\n\n    const [scaledStyle, setScaledStyle] = useState({});\n\n    const requiredIcon = require(`../../assets/icons/${icon}.png`);\n    const [doubleClickTimerActive, setDoubleClickTimerActive] = useState(false);\n\n    const getShortcutId = useCallback(() => {\n        const shortcutId = shortcutName.replace(/\\s/g, '');\n        return `desktop-shortcut-${shortcutId}`;\n    }, [shortcutName]);\n\n    useEffect(() => {\n        setShortcutId(getShortcutId());\n    }, [shortcutName, getShortcutId]);\n\n    useEffect(() => {\n        if (containerRef.current && Object.keys(scaledStyle).length === 0) {\n            //@ts-ignore\n            const boundingBox = containerRef.current.getBoundingClientRect();\n            setScaledStyle({\n                transformOrigin: 'center',\n                transform: 'scale(1.5)',\n                left: boundingBox.width / 4,\n                top: boundingBox.height / 4,\n                // transform: 'scale(1.5)',\n                // left: boundingBox.width / 4,\n                // top: boundingBox.height / 4,\n            });\n        }\n    }, [scaledStyle]);\n\n    const handleClickOutside = useCallback(\n        (event: MouseEvent) => {\n            // @ts-ignore\n            const targetId = event.target.id;\n            if (targetId !== shortcutId) {\n                setIsSelected(false);\n            }\n            if (!isSelected && lastSelected) {\n                setLastSelected(false);\n            }\n        },\n        [isSelected, setIsSelected, setLastSelected, lastSelected, shortcutId]\n    );\n\n    const handleClickShortcut = useCallback(() => {\n        if (doubleClickTimerActive) {\n            onOpen && onOpen();\n            setIsSelected(false);\n            setDoubleClickTimerActive(false);\n            return;\n        }\n        setIsSelected(true);\n        setLastSelected(true);\n        setDoubleClickTimerActive(true);\n        // set double click timer\n        setTimeout(() => {\n            setDoubleClickTimerActive(false);\n        }, 300);\n    }, [doubleClickTimerActive, setIsSelected, onOpen]);\n\n    useEffect(() => {\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, [isSelected, handleClickOutside]);\n\n    return (\n        <div\n            id={`${shortcutId}`}\n            style={Object.assign({}, styles.appShortcut, scaledStyle)}\n            onMouseDown={handleClickShortcut}\n            ref={containerRef}\n        >\n            <div id={`${shortcutId}`} style={styles.iconContainer}>\n                <div\n                    id={`${shortcutId}`}\n                    className=\"desktop-shortcut-icon\"\n                    style={Object.assign(\n                        {},\n                        styles.iconOverlay,\n                        isSelected && styles.checkerboard,\n                        isSelected && {\n                            WebkitMask: `url(${requiredIcon})`,\n                        }\n                    )}\n                />\n                <Icon icon={icon} style={styles.icon} />\n            </div>\n            <div\n                className={\n                    isSelected\n                        ? 'selected-shortcut-border'\n                        : lastSelected\n                        ? 'shortcut-border'\n                        : ''\n                }\n                id={`${shortcutId}`}\n                style={isSelected ? { backgroundColor: colors.blue } : {}}\n            >\n                <p\n                    id={`${shortcutId}`}\n                    style={Object.assign(\n                        {},\n                        styles.shortcutText,\n                        invertText && !isSelected && { color: 'black' }\n                    )}\n                >\n                    {shortcutName}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nconst styles: StyleSheetCSS = {\n    appShortcut: {\n        position: 'absolute',\n        width: 56,\n\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n        textAlign: 'center',\n    },\n    shortcutText: {\n        cursor: 'pointer',\n        textOverflow: 'wrap',\n        fontFamily: 'MSSerif',\n        color: 'white',\n        fontSize: 8,\n        paddingRight: 2,\n        paddingLeft: 2,\n    },\n    iconContainer: {\n        cursor: 'pointer',\n        paddingBottom: 3,\n    },\n    iconOverlay: {\n        position: 'absolute',\n        top: 0,\n        width: 32,\n        height: 32,\n    },\n    checkerboard: {\n        backgroundImage: `linear-gradient(45deg, ${colors.blue} 25%, transparent 25%),\n        linear-gradient(-45deg, ${colors.blue} 25%, transparent 25%),\n        linear-gradient(45deg, transparent 75%, ${colors.blue} 75%),\n        linear-gradient(-45deg, transparent 75%, ${colors.blue} 75%)`,\n        backgroundSize: `2px 2px`,\n        backgroundPosition: `0 0, 0 1px, 1px -1px, -1px 0px`,\n        pointerEvents: 'none',\n    },\n};\n\nexport default DesktopShortcut;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}