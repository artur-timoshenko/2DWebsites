{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Artur\\\\Desktop\\\\portfolio-inner-site-master\\\\src\\\\components\\\\wordle\\\\Wordle.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { motion, useAnimation } from 'framer-motion';\nimport WORDS from './Words';\nimport { Easing } from '../general/Animation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KeyboardLetter = ({\n  letter,\n  guesses,\n  word,\n  currentGuess,\n  setGuesses,\n  setCurrentGuess\n}) => {\n  _s();\n  const [isInWord, setIsInWord] = useState(false);\n  const [isInPlace, setIsInPlace] = useState(false);\n  const [notInWord, setNotInWord] = useState(false);\n  useEffect(() => {\n    guesses.forEach(guess => {\n      if (word.includes(letter) && guess.includes(letter)) {\n        setIsInWord(true);\n        if (word.indexOf(letter) === guess.indexOf(letter)) {\n          setIsInPlace(true);\n        }\n      }\n      if (!word.includes(letter) && guess.includes(letter)) {\n        setNotInWord(true);\n      }\n    });\n    if (guesses.length === 0) {\n      setIsInPlace(false);\n      setIsInWord(false);\n      setNotInWord(false);\n    }\n  }, [guesses, letter, word]);\n  const handleClick = () => {\n    if (letter === 'RET') {\n      if (currentGuess.length === word.length) {\n        if (WORDS.includes(currentGuess.toLowerCase())) {\n          setGuesses([...guesses, currentGuess]);\n          setCurrentGuess('');\n        }\n      }\n    } else if (letter === 'DEL') {\n      setCurrentGuess(currentGuess.slice(0, -1));\n    } else if (currentGuess.length < word.length) {\n      setCurrentGuess(currentGuess + letter.toUpperCase());\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseDown: handleClick,\n    className: \"site-button\",\n    style: Object.assign({}, styles.letterBox, isInWord && {\n      backgroundColor: 'yellow'\n    }, isInPlace && {\n      backgroundColor: 'lightgreen'\n    }, notInWord && {\n      backgroundColor: 'gray'\n    }),\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: letter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(KeyboardLetter, \"wzWJhQPMUJIhLg1zkIyghN++/cE=\");\n_c = KeyboardLetter;\nconst GuessLetter = ({\n  guessed,\n  letter,\n  guess,\n  word\n}) => {\n  _s2();\n  const [isInWord, setIsInWord] = useState(false);\n  const [isInPlace, setIsInPlace] = useState(false);\n  useEffect(() => {\n    if (guessed) {\n      if (word.includes(letter)) {\n        setIsInWord(true);\n        if (word.indexOf(letter) === guess.indexOf(letter)) {\n          setIsInPlace(true);\n        }\n      }\n    }\n  }, [guessed, guess, letter, word]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"button-border\",\n    style: Object.assign({}, styles.guessLetterBox, isInWord && {\n      backgroundColor: 'yellow'\n    }, isInPlace && {\n      backgroundColor: 'lightgreen'\n    }, !guessed && {\n      backgroundColor: 'white'\n    }, letter === ' ' && styles.emptyBox),\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: letter.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n_s2(GuessLetter, \"BPwuivUlz4j4BXZZXLGEYD3ubKI=\");\n_c2 = GuessLetter;\nconst GuessWord = ({\n  guess,\n  guesses,\n  word,\n  active,\n  noClear\n}) => {\n  _s3();\n  const [savedGuess, setSavedGuess] = useState(guess);\n  const controls = useAnimation();\n  useEffect(() => {\n    if (active) {\n      setSavedGuess(guess);\n      if (guess.length === word.length && !WORDS.includes(guess.toLowerCase())) {\n        controls.start({\n          backgroundColor: '#f00',\n          x: 2,\n          transition: {\n            duration: 0.1\n          }\n        }).then(() => {\n          controls.start({\n            x: -4,\n            backgroundColor: '#fff',\n            transition: {\n              duration: 0.1\n            }\n          }).then(() => {\n            controls.start({\n              x: 0,\n              backgroundColor: '#fff',\n              transition: {\n                duration: 0.09\n              }\n            });\n          });\n        });\n      }\n    }\n  }, [guess, active, word, controls]);\n  useEffect(() => {\n    if (guesses.length === 0 && !noClear) setSavedGuess('');\n  }, [guesses, noClear]);\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    animate: controls,\n    style: styles.guessWordRow,\n    children: [savedGuess.split('').map((letter, index) => /*#__PURE__*/_jsxDEV(GuessLetter, {\n      guessed: !active,\n      letter: letter,\n      guess: savedGuess,\n      word: word\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }, this)), [...Array(word.length - savedGuess.length)].map((e, i) => /*#__PURE__*/_jsxDEV(GuessLetter, {\n      guessed: !active,\n      letter: ' ',\n      guess: savedGuess,\n      word: word\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 9\n  }, this);\n};\n_s3(GuessWord, \"4wUjD09Uxj9guC+2pU1RUGfmrUc=\", false, function () {\n  return [useAnimation];\n});\n_c3 = GuessWord;\nconst TOP_ROW = ['Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P'];\nconst MIDDLE_ROW = ['A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L'];\nconst BOTTOM_ROW = ['RET', 'Z', 'X', 'C', 'V', 'B', 'N', 'M', 'DEL'];\nconst ROWS = [TOP_ROW, MIDDLE_ROW, BOTTOM_ROW];\nconst ALPHABET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nconst Wordle = () => {\n  _s4();\n  const word = 'HENRY';\n  const [guesses, setGuesses] = useState([]);\n  const [gameOver, setGameOver] = useState(false);\n  const [won, setWon] = useState(false);\n  const [currentGuess, setCurrentGuess] = useState('');\n  const restart = () => {\n    setGuesses([]);\n    setGameOver(false);\n    setTimeout(() => {\n      setWon(false);\n    }, 500);\n    setCurrentGuess('');\n  };\n\n  // listen to keyboard events\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.key === 'Backspace') {\n        setCurrentGuess(currentGuess.slice(0, -1));\n      } else if (event.key === 'Enter') {\n        if (currentGuess.length === word.length) {\n          if (WORDS.includes(currentGuess.toLowerCase())) {\n            setGuesses([...guesses, currentGuess]);\n            setCurrentGuess('');\n          }\n        }\n      } else if (event.key.length === 1 && ALPHABET.includes(event.key.toUpperCase())) {\n        if (currentGuess.length < word.length) {\n          setCurrentGuess(currentGuess + event.key.toUpperCase());\n        }\n      }\n    };\n    // add listener\n    window.addEventListener('keydown', handleKeyDown);\n    // cleanup listener\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [guesses, currentGuess]);\n  useEffect(() => {\n    if (guesses.length === 6) {\n      setGameOver(true);\n    }\n    guesses.forEach(guess => {\n      if (guess === word) {\n        setGameOver(true);\n        setWon(true);\n      }\n    });\n  }, [guesses]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Henordle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Wordle but with a HENRY based twist.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      variants: gameOverAnimations,\n      animate: gameOver ? 'show' : 'hidden',\n      initial: false,\n      style: Object.assign({}, styles.gameOverContainer, gameOver && {\n        zIndex: 1000\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: won ? 'You win!' : 'Game Over'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Thanks for playing! Remember: the word is always \\\"HENRY\\\"!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GuessWord, {\n        guess: word,\n        word: word,\n        guesses: guesses,\n        active: false,\n        noClear: true\n      }, 'winning-guess', false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"site-button\",\n        onMouseDown: restart,\n        children: \"Restart Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      variants: gameAnimations,\n      animate: !gameOver ? 'show' : 'hidden',\n      initial: false,\n      style: styles.gameContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.playArea,\n        children: [...Array(6)].map((e, i) => /*#__PURE__*/_jsxDEV(GuessWord, {\n          guess: currentGuess,\n          word: word,\n          guesses: guesses,\n          active: i === guesses.length\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.keyboardContainer,\n        children: ROWS.map(row => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.keyboardRow,\n          children: row.map(letter => /*#__PURE__*/_jsxDEV(KeyboardLetter, {\n            word: word,\n            setGuesses: setGuesses,\n            guesses: guesses,\n            letter: letter,\n            currentGuess: currentGuess,\n            setCurrentGuess: setCurrentGuess\n          }, letter, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 33\n          }, this))\n        }, `row-${row[0]}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 9\n  }, this);\n};\n_s4(Wordle, \"yg2t6zqLqKKoZfCsMBxmPZF8V/c=\");\n_c4 = Wordle;\nconst gameAnimations = {\n  hidden: {\n    opacity: 0,\n    y: -12,\n    transition: {\n      duration: 0.5\n    }\n  },\n  show: {\n    y: 0,\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duration: 0.5\n    }\n  }\n};\nconst gameOverAnimations = {\n  hidden: {\n    opacity: 0,\n    y: 32,\n    transition: {\n      duration: 0.5\n    }\n  },\n  show: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      delay: 0.4,\n      duration: 0.5,\n      ease: Easing.expOut\n    }\n  }\n};\nconst styles = {\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    overflowY: 'scroll'\n  },\n  gameContainer: {\n    flex: 1,\n    flexDirection: 'column'\n  },\n  gameOverContainer: {\n    zIndex: -1000,\n    textAlign: 'center',\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff'\n  },\n  header: {\n    flexShrink: 1,\n    paddingTop: 32,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  keyboardContainer: {\n    flexShrink: 1,\n    paddingBottom: 24,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  playArea: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 16,\n    marginBottom: 16\n  },\n  letterBox: {\n    padding: 12,\n    paddingTop: 16,\n    minWidth: 42,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 16,\n    margin: 4\n  },\n  keyboardRow: {},\n  guessLetterBox: {\n    width: 60,\n    height: 60,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 4\n  },\n  guessWordRow: {},\n  emptyBox: {\n    border: '2px solid gray',\n    backgroundColor: 'white',\n    boxShadow: 'none'\n  }\n};\nexport default Wordle;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"KeyboardLetter\");\n$RefreshReg$(_c2, \"GuessLetter\");\n$RefreshReg$(_c3, \"GuessWord\");\n$RefreshReg$(_c4, \"Wordle\");","map":{"version":3,"names":["React","useEffect","useState","motion","useAnimation","WORDS","Easing","jsxDEV","_jsxDEV","KeyboardLetter","letter","guesses","word","currentGuess","setGuesses","setCurrentGuess","_s","isInWord","setIsInWord","isInPlace","setIsInPlace","notInWord","setNotInWord","forEach","guess","includes","indexOf","length","handleClick","toLowerCase","slice","toUpperCase","onMouseDown","className","style","Object","assign","styles","letterBox","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","GuessLetter","guessed","_s2","guessLetterBox","emptyBox","_c2","GuessWord","active","noClear","_s3","savedGuess","setSavedGuess","controls","start","x","transition","duration","then","div","animate","guessWordRow","split","map","index","Array","e","i","_c3","TOP_ROW","MIDDLE_ROW","BOTTOM_ROW","ROWS","ALPHABET","Wordle","_s4","gameOver","setGameOver","won","setWon","restart","setTimeout","handleKeyDown","event","key","window","addEventListener","removeEventListener","container","header","variants","gameOverAnimations","initial","gameOverContainer","zIndex","gameAnimations","gameContainer","playArea","keyboardContainer","row","keyboardRow","_c4","hidden","opacity","y","show","delay","ease","expOut","flex","flexDirection","overflowY","textAlign","width","height","position","justifyContent","alignItems","flexShrink","paddingTop","paddingBottom","marginTop","marginBottom","padding","minWidth","margin","border","boxShadow","$RefreshReg$"],"sources":["C:/Users/Artur/Desktop/portfolio-inner-site-master/src/components/wordle/Wordle.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { motion, useAnimation } from 'framer-motion';\nimport WORDS from './Words';\nimport { Easing } from '../general/Animation';\n\nexport interface KeyboardLetterProps {\n    letter: string;\n    word: string;\n    guesses: string[];\n    currentGuess: string;\n    setGuesses: React.Dispatch<React.SetStateAction<string[]>>;\n    setCurrentGuess: React.Dispatch<React.SetStateAction<string>>;\n}\n\nconst KeyboardLetter: React.FC<KeyboardLetterProps> = ({\n    letter,\n    guesses,\n    word,\n    currentGuess,\n    setGuesses,\n    setCurrentGuess,\n}) => {\n    const [isInWord, setIsInWord] = useState(false);\n    const [isInPlace, setIsInPlace] = useState(false);\n    const [notInWord, setNotInWord] = useState(false);\n\n    useEffect(() => {\n        guesses.forEach((guess) => {\n            if (word.includes(letter) && guess.includes(letter)) {\n                setIsInWord(true);\n                if (word.indexOf(letter) === guess.indexOf(letter)) {\n                    setIsInPlace(true);\n                }\n            }\n            if (!word.includes(letter) && guess.includes(letter)) {\n                setNotInWord(true);\n            }\n        });\n        if (guesses.length === 0) {\n            setIsInPlace(false);\n            setIsInWord(false);\n            setNotInWord(false);\n        }\n    }, [guesses, letter, word]);\n\n    const handleClick = () => {\n        if (letter === 'RET') {\n            if (currentGuess.length === word.length) {\n                if (WORDS.includes(currentGuess.toLowerCase())) {\n                    setGuesses([...guesses, currentGuess]);\n                    setCurrentGuess('');\n                }\n            }\n        } else if (letter === 'DEL') {\n            setCurrentGuess(currentGuess.slice(0, -1));\n        } else if (currentGuess.length < word.length) {\n            setCurrentGuess(currentGuess + letter.toUpperCase());\n        }\n    };\n\n    return (\n        <div\n            onMouseDown={handleClick}\n            className=\"site-button\"\n            style={Object.assign(\n                {},\n                styles.letterBox,\n                isInWord && { backgroundColor: 'yellow' },\n                isInPlace && { backgroundColor: 'lightgreen' },\n                notInWord && { backgroundColor: 'gray' }\n            )}\n        >\n            <p>{letter}</p>\n        </div>\n    );\n};\n\nexport interface GuessLetterProps {\n    letter: string;\n    word: string;\n    guess: string;\n    guessed: boolean;\n}\n\nconst GuessLetter: React.FC<GuessLetterProps> = ({\n    guessed,\n    letter,\n    guess,\n    word,\n}) => {\n    const [isInWord, setIsInWord] = useState(false);\n    const [isInPlace, setIsInPlace] = useState(false);\n\n    useEffect(() => {\n        if (guessed) {\n            if (word.includes(letter)) {\n                setIsInWord(true);\n                if (word.indexOf(letter) === guess.indexOf(letter)) {\n                    setIsInPlace(true);\n                }\n            }\n        }\n    }, [guessed, guess, letter, word]);\n\n    return (\n        <div\n            className=\"button-border\"\n            style={Object.assign(\n                {},\n                styles.guessLetterBox,\n                isInWord && { backgroundColor: 'yellow' },\n                isInPlace && { backgroundColor: 'lightgreen' },\n                !guessed && { backgroundColor: 'white' },\n                letter === ' ' && styles.emptyBox\n            )}\n        >\n            <h3>\n                <b>{letter.toUpperCase()}</b>\n            </h3>\n        </div>\n    );\n};\n\nexport interface GuessWordProps {\n    guess: string;\n    guesses: string[];\n    word: string;\n    active: boolean;\n    noClear?: boolean;\n}\n\nconst GuessWord: React.FC<GuessWordProps> = ({\n    guess,\n    guesses,\n    word,\n    active,\n    noClear,\n}) => {\n    const [savedGuess, setSavedGuess] = useState(guess);\n    const controls = useAnimation();\n\n    useEffect(() => {\n        if (active) {\n            setSavedGuess(guess);\n            if (\n                guess.length === word.length &&\n                !WORDS.includes(guess.toLowerCase())\n            ) {\n                controls\n                    .start({\n                        backgroundColor: '#f00',\n                        x: 2,\n                        transition: {\n                            duration: 0.1,\n                        },\n                    })\n                    .then(() => {\n                        controls\n                            .start({\n                                x: -4,\n                                backgroundColor: '#fff',\n                                transition: {\n                                    duration: 0.1,\n                                },\n                            })\n                            .then(() => {\n                                controls.start({\n                                    x: 0,\n                                    backgroundColor: '#fff',\n                                    transition: {\n                                        duration: 0.09,\n                                    },\n                                });\n                            });\n                    });\n            }\n        }\n    }, [guess, active, word, controls]);\n\n    useEffect(() => {\n        if (guesses.length === 0 && !noClear) setSavedGuess('');\n    }, [guesses, noClear]);\n\n    return (\n        <motion.div animate={controls} style={styles.guessWordRow}>\n            {savedGuess.split('').map((letter, index) => (\n                <GuessLetter\n                    guessed={!active}\n                    key={index}\n                    letter={letter}\n                    guess={savedGuess}\n                    word={word}\n                />\n            ))}\n            {[...Array(word.length - savedGuess.length)].map((e, i) => (\n                <GuessLetter\n                    guessed={!active}\n                    key={i}\n                    letter={' '}\n                    guess={savedGuess}\n                    word={word}\n                />\n            ))}\n        </motion.div>\n    );\n};\n\nexport interface WordleProps {}\n\nconst TOP_ROW = ['Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P'];\nconst MIDDLE_ROW = ['A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L'];\nconst BOTTOM_ROW = ['RET', 'Z', 'X', 'C', 'V', 'B', 'N', 'M', 'DEL'];\nconst ROWS = [TOP_ROW, MIDDLE_ROW, BOTTOM_ROW];\nconst ALPHABET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\nconst Wordle: React.FC<WordleProps> = () => {\n    const word = 'HENRY';\n    const [guesses, setGuesses] = useState<string[]>([]);\n    const [gameOver, setGameOver] = useState(false);\n    const [won, setWon] = useState(false);\n    const [currentGuess, setCurrentGuess] = useState('');\n\n    const restart = () => {\n        setGuesses([]);\n        setGameOver(false);\n        setTimeout(() => {\n            setWon(false);\n        }, 500);\n        setCurrentGuess('');\n    };\n\n    // listen to keyboard events\n    useEffect(() => {\n        const handleKeyDown = (event: KeyboardEvent) => {\n            if (event.key === 'Backspace') {\n                setCurrentGuess(currentGuess.slice(0, -1));\n            } else if (event.key === 'Enter') {\n                if (currentGuess.length === word.length) {\n                    if (WORDS.includes(currentGuess.toLowerCase())) {\n                        setGuesses([...guesses, currentGuess]);\n                        setCurrentGuess('');\n                    }\n                }\n            } else if (\n                event.key.length === 1 &&\n                ALPHABET.includes(event.key.toUpperCase())\n            ) {\n                if (currentGuess.length < word.length) {\n                    setCurrentGuess(currentGuess + event.key.toUpperCase());\n                }\n            }\n        };\n        // add listener\n        window.addEventListener('keydown', handleKeyDown);\n        // cleanup listener\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [guesses, currentGuess]);\n\n    useEffect(() => {\n        if (guesses.length === 6) {\n            setGameOver(true);\n        }\n        guesses.forEach((guess) => {\n            if (guess === word) {\n                setGameOver(true);\n                setWon(true);\n            }\n        });\n    }, [guesses]);\n\n    return (\n        <div style={styles.container}>\n            <div style={styles.header}>\n                <h2>Henordle</h2>\n                <p>Wordle but with a HENRY based twist.</p>\n            </div>\n            <motion.div\n                variants={gameOverAnimations}\n                animate={gameOver ? 'show' : 'hidden'}\n                initial={false}\n                style={Object.assign(\n                    {},\n                    styles.gameOverContainer,\n                    gameOver && { zIndex: 1000 }\n                )}\n            >\n                <h2>{won ? 'You win!' : 'Game Over'}</h2>\n                <p>Thanks for playing! Remember: the word is always \"HENRY\"!</p>\n                <br />\n                <GuessWord\n                    key={'winning-guess'}\n                    guess={word}\n                    word={word}\n                    guesses={guesses}\n                    active={false}\n                    noClear={true}\n                />\n                <br />\n                <div className=\"site-button\" onMouseDown={restart}>\n                    Restart Game\n                </div>\n            </motion.div>\n            <motion.div\n                variants={gameAnimations}\n                animate={!gameOver ? 'show' : 'hidden'}\n                initial={false}\n                style={styles.gameContainer}\n            >\n                <div style={styles.playArea}>\n                    {[...Array(6)].map((e, i) => (\n                        <GuessWord\n                            key={i}\n                            guess={currentGuess}\n                            word={word}\n                            guesses={guesses}\n                            active={i === guesses.length}\n                        />\n                    ))}\n                </div>\n                <div style={styles.keyboardContainer}>\n                    {ROWS.map((row) => (\n                        <div style={styles.keyboardRow} key={`row-${row[0]}`}>\n                            {row.map((letter) => (\n                                <KeyboardLetter\n                                    key={letter}\n                                    word={word}\n                                    setGuesses={setGuesses}\n                                    guesses={guesses}\n                                    letter={letter}\n                                    currentGuess={currentGuess}\n                                    setCurrentGuess={setCurrentGuess}\n                                />\n                            ))}\n                        </div>\n                    ))}\n                </div>\n            </motion.div>\n        </div>\n    );\n};\n\nconst gameAnimations = {\n    hidden: {\n        opacity: 0,\n        y: -12,\n        transition: {\n            duration: 0.5,\n        },\n    },\n    show: {\n        y: 0,\n        opacity: 1,\n        transition: {\n            delay: 0.5,\n            duration: 0.5,\n        },\n    },\n};\n\nconst gameOverAnimations = {\n    hidden: {\n        opacity: 0,\n        y: 32,\n        transition: {\n            duration: 0.5,\n        },\n    },\n    show: {\n        opacity: 1,\n        y: 0,\n        transition: {\n            delay: 0.4,\n            duration: 0.5,\n            ease: Easing.expOut,\n        },\n    },\n};\n\nconst styles: StyleSheetCSS = {\n    container: {\n        flex: 1,\n        flexDirection: 'column',\n        overflowY: 'scroll',\n    },\n    gameContainer: {\n        flex: 1,\n        flexDirection: 'column',\n    },\n    gameOverContainer: {\n        zIndex: -1000,\n        textAlign: 'center',\n        width: '100%',\n        height: '100%',\n        position: 'absolute',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#fff',\n    },\n    header: {\n        flexShrink: 1,\n        paddingTop: 32,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    keyboardContainer: {\n        flexShrink: 1,\n\n        paddingBottom: 24,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    playArea: {\n        flex: 1,\n        flexDirection: 'column',\n\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: 16,\n        marginBottom: 16,\n    },\n    letterBox: {\n        padding: 12,\n        paddingTop: 16,\n        minWidth: 42,\n\n        justifyContent: 'center',\n        alignItems: 'center',\n        paddingBottom: 16,\n        margin: 4,\n    },\n    keyboardRow: {},\n    guessLetterBox: {\n        width: 60,\n        height: 60,\n        justifyContent: 'center',\n        alignItems: 'center',\n\n        margin: 4,\n    },\n    guessWordRow: {},\n    emptyBox: {\n        border: '2px solid gray',\n        backgroundColor: 'white',\n        boxShadow: 'none',\n    },\n};\n\nexport default Wordle;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}