{"ast":null,"code":"import { useEffect, useState } from 'react';\nfunction useMediaQuery(query) {\n  const getMatches = query => {\n    if (typeof window !== 'undefined') {\n      return window.matchMedia(query).matches;\n    }\n    return false;\n  };\n  const [matches, setMatches] = useState(getMatches(query));\n  function handleChange() {\n    setMatches(getMatches(query));\n  }\n  useEffect(() => {\n    const matchMedia = window.matchMedia(query);\n    handleChange();\n    if (matchMedia.addListener) {\n      matchMedia.addListener(handleChange);\n    } else {\n      matchMedia.addEventListener('change', handleChange);\n    }\n    return () => {\n      if (matchMedia.removeListener) {\n        matchMedia.removeListener(handleChange);\n      } else {\n        matchMedia.removeEventListener('change', handleChange);\n      }\n    };\n  }, [query]);\n  return matches;\n}\nexport default useMediaQuery;","map":{"version":3,"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,aAAaA,CAACC,KAAa;EAClC,MAAMC,UAAU,GAAID,KAAa,IAAa;IAE5C,IAAI,OAAOE,MAAM,KAAK,WAAW,EAAE;MACjC,OAAOA,MAAM,CAACC,UAAU,CAACH,KAAK,CAAC,CAACI,OAAO;;IAEzC,OAAO,KAAK;EACd,CAAC;EAED,MAAM,CAACA,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAUG,UAAU,CAACD,KAAK,CAAC,CAAC;EAElE,SAASM,YAAYA;IACnBD,UAAU,CAACJ,UAAU,CAACD,KAAK,CAAC,CAAC;EAC/B;EAEAH,SAAS,CAAC,MAAK;IACb,MAAMM,UAAU,GAAGD,MAAM,CAACC,UAAU,CAACH,KAAK,CAAC;IAG3CM,YAAY,EAAE;IAGd,IAAIH,UAAU,CAACI,WAAW,EAAE;MAC1BJ,UAAU,CAACI,WAAW,CAACD,YAAY,CAAC;KACrC,MAAM;MACLH,UAAU,CAACK,gBAAgB,CAAC,QAAQ,EAAEF,YAAY,CAAC;;IAGrD,OAAO,MAAK;MACV,IAAIH,UAAU,CAACM,cAAc,EAAE;QAC7BN,UAAU,CAACM,cAAc,CAACH,YAAY,CAAC;OACxC,MAAM;QACLH,UAAU,CAACO,mBAAmB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;;IAE1D,CAAC;EAEH,CAAC,EAAE,CAACN,KAAK,CAAC,CAAC;EAEX,OAAOI,OAAO;AAChB;AAEA,eAAeL,aAAa","names":["useEffect","useState","useMediaQuery","query","getMatches","window","matchMedia","matches","setMatches","handleChange","addListener","addEventListener","removeListener","removeEventListener"],"sources":["C:\\Users\\Artur\\Desktop\\portfolio-inner-site-master\\node_modules\\usehooks-ts\\src\\useMediaQuery\\useMediaQuery.ts"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nfunction useMediaQuery(query: string): boolean {\n  const getMatches = (query: string): boolean => {\n    // Prevents SSR issues\n    if (typeof window !== 'undefined') {\n      return window.matchMedia(query).matches\n    }\n    return false\n  }\n\n  const [matches, setMatches] = useState<boolean>(getMatches(query))\n\n  function handleChange() {\n    setMatches(getMatches(query))\n  }\n\n  useEffect(() => {\n    const matchMedia = window.matchMedia(query)\n\n    // Triggered at the first client-side load and if query changes\n    handleChange()\n\n    // Listen matchMedia\n    if (matchMedia.addListener) {\n      matchMedia.addListener(handleChange)\n    } else {\n      matchMedia.addEventListener('change', handleChange)\n    }\n\n    return () => {\n      if (matchMedia.removeListener) {\n        matchMedia.removeListener(handleChange)\n      } else {\n        matchMedia.removeEventListener('change', handleChange)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query])\n\n  return matches\n}\n\nexport default useMediaQuery\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}